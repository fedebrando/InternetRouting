c_routing = O(n) * c_dijkstra
c_dijkstra = O(n) * {c_find_qk_min + O(logn) + O(n) * [c_corpo_65]}
c_find_qk_min = O(n)
c_corpo_65 = c_rombo + c_+=
c_rombo = O(p) * (c_+ + c_insert)
c_+ = O(e) //problema riallocazione vector
c_+= = O(p) * c_insert
c_insert = O(logp) + O(e)

ipotesi:
supponiamo che O(p) Ã¨ uguale a O(e) e a O(n)
-> 
c_routing = O(n) * c_dijkstra = O(n) * O(n^4) -> O(n^5)
c_dijkstra = O(n) * {c_find_qk_min + O(logn) + O(n) * [c_corpo_65]} = O(n) * {O(n) + O(logn) + O(n) * O(n^2)} = O(n) * O(n^3) -> O(n^4)
c_find_qk_min = O(n)
c_corpo_65 = c_rombo + c_+= = O(n^2) + O(n^2) -> O(n^2)
c_rombo = O(n) * (c_+ + c_insert) = O(n) * (O(n) + O(n)) = O(n) * O(n) -> O(n^2)
c_+ = O(n) //problema riallocazione vector
c_+= = O(n) * c_insert = O(n) * O(n) -> O(n^2)
c_insert = O(logn) + O(n) -> O(n)