
Efficient parallel Internet routing algorithms
Proporre e implementare un algoritmo parallelo per trovare i percorsi a distanza minima tra un insieme finito di nodi;
se tra due nodi ci sono più percorsi a uguale distanza, scegliere il migliore in base a qualche altro criterio, tipo reliability o bandwidth.
Dataset: http://www.topology-zoo.org/dataset.html (suggerimento: concentrarsi su uno specifico network provider, ad esempio Colt Telecom network, che ha 152 nodi).

Riferimenti bibliografici:
[1] Dynerowicz S., Griffin T. G., On the Forwarding Paths Produced by Internet Routing Algorithms. Seweryn Dynerowicz (University of Namur, Belgium), Timothy G. Griffin. ICNP 2013.
[2] Griffin T. J., Lecture Notes, Algebraic Path Problems with applications to Internet Routing, Computer Laboratory, University of Cambridge, 2013.

// TODO
(1.) fare stampa bella delle matrici
(2.)* programma di routing (parsing file dati -> matrice adiacenza)
(3.) parallelizzazione funzione getPi()
4. relazione
5. CUDA

// TODOTODO
1. rendere loop_free costante
2. parallelizzare rombo
3. metodo statico concept totally order per sapere se un semianello è totalmente ordinato
4. di conseguenza anche lex_product
5. fare dijkstra generico sfruttando 3. e 4.
6. aggiornare metodo compute in base all'ordinamento della metrica